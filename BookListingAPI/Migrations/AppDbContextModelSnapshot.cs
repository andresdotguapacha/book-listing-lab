// <auto-generated />
using System;
using BookListingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookListingAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookListingAPI.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1d2c3b4-a567-8901-b234-c56789d01234"),
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = new Guid("f2e3d4c5-b678-9012-c345-d67890e12345"),
                            FirstName = "Aldous",
                            LastName = "Huxley"
                        });
                });

            modelBuilder.Entity("BookListingAPI.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PublicationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e567-8901-f234-567890a12345"),
                            PublicationDate = "1949-06-08",
                            Title = "1984"
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f678-9012-a345-678901b23456"),
                            PublicationDate = "1932-01-01",
                            Title = "Brave New World"
                        });
                });

            modelBuilder.Entity("BookListingAPI.Models.BookAuthor", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("a1b2c3d4-e567-8901-f234-567890a12345"),
                            AuthorId = new Guid("e1d2c3b4-a567-8901-b234-c56789d01234")
                        },
                        new
                        {
                            BookId = new Guid("b2c3d4e5-f678-9012-a345-678901b23456"),
                            AuthorId = new Guid("f2e3d4c5-b678-9012-c345-d67890e12345")
                        });
                });

            modelBuilder.Entity("BookListingAPI.Models.BookAuthor", b =>
                {
                    b.HasOne("BookListingAPI.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookListingAPI.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BookListingAPI.Models.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("BookListingAPI.Models.Book", b =>
                {
                    b.Navigation("BookAuthors");
                });
#pragma warning restore 612, 618
        }
    }
}
